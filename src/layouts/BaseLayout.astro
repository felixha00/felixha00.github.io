---
// import "@fontsource/geist-sans/100.css";
// import "@fontsource/geist-sans/200.css";
// import "@fontsource/geist-sans/300.css";
// import "@fontsource/geist-sans/400.css";
// import "@fontsource/geist-sans/500.css";
// import "@fontsource/geist-sans/600.css";
// import "@fontsource/geist-sans/700.css";
// import "@fontsource/geist-sans/800.css";
// import "@fontsource/geist-sans/900.css";

import "@fontsource/geist-mono/100.css";
import "@fontsource/geist-mono/200.css";
import "@fontsource/geist-mono/300.css";
import "@fontsource/geist-mono/400.css";
import "@fontsource/geist-mono/500.css";
import "@fontsource/geist-mono/600.css";
import "@fontsource/geist-mono/700.css";
import "@fontsource/geist-mono/800.css";
import "@fontsource/geist-mono/900.css";

import "@fontsource-variable/inter";
// import "@fontsource-variable/inter-tight";

import { ModeWatcher } from "mode-watcher";
import Navbar from "@/components/svelte/Navbar.svelte";

import "@/styles/app.css";
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<script is:inline>
	const isBrowser = typeof localStorage !== "undefined";
	const getThemePreference = () => {
		if (isBrowser && localStorage.getItem("theme")) {
			return localStorage.getItem("theme");
		}
		return window.matchMedia("(prefers-color-scheme: dark)").matches
			? "dark"
			: "light";
	};
	const isDark = getThemePreference() === "dark";
	document.documentElement.classList[isDark ? "add" : "remove"]("dark");

	if (isBrowser) {
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains("dark");
			localStorage.setItem("theme", isDark ? "dark" : "light");
		});
		observer.observe(document.documentElement, {
			attributes: true,
			attributeFilter: ["class"],
		});
	}
</script>

<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Porfolio of Felix Ha" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<Navbar url={Astro.url} client:load />
		<main class="pt-[36px] min-h-screen flex flex-col overflow-x-hidden">
			<slot />
		</main>
		<ModeWatcher client:load />
	</body>
</html>
